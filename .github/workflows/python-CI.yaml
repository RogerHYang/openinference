name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - "python/**"

defaults:
  run:
    working-directory: python

jobs:
  changes:
    name: Filter Changes
    runs-on: ubuntu-latest
    outputs:
      diff_files: ${{ steps.filter.outputs.diff_files }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: python
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          working-directory: python
          list-files: json
          filters: |
            diff:
              - "python/**/*.py"
              - "python/**/*.toml"

  find-tox-testenv:
    name: Find Tox Testenv
    needs: changes
    if: ${{ needs.changes.outputs.diff_files != '' }}
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.testenv.outputs.list }}
    steps:
      - run: >-
          echo "list=$(echo '${{ needs.changes.outputs.diff_files }}'
          | jq -r '.[]'
          | sed -n
          -e 's/^python\/instrumentation\/openinference-instrumentation-\([^/]*\)\/.*/\1/p'
          -e 's/^python\/openinference-\(instrumentation\)\/.*/\1/p'
          -e 's/^python\/openinference-\(semantic-conventions\)\/.*/\1/p'
          | sort -u
          | sed -e 's/semantic-conventions/semconv/' -e 's/-/_/' -e 's/^/\\b/'
          | paste -sd "|" -)"
          >> "$GITHUB_OUTPUT"
        id: packages
      - uses: actions/checkout@v4
        with:
          sparse-checkout: python
      - uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - uses: astral-sh/setup-uv@v5
        with:
          version: 0.5.27
      - run: >-
          echo "list=$(uvx --with tox-uv tox -l
          | egrep -e '${{ steps.packages.outputs.list }}'
          | jq -R -s 'split("\n")[:-1]')"
          >> $GITHUB_OUTPUT
        id: testenv

  run-tox-testenv:
    name: Run Tox Testenv
    needs: find-tox-testenv
    if: ${{ needs.find-tox-testenv.outputs.list != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testenv: ${{ fromJSON(needs.find-tox-testenv.outputs.list) }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: python
      - uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - uses: astral-sh/setup-uv@v5
        with:
          version: 0.5.27
      - run: uvx --with tox-uv tox run -e ${{ matrix.testenv }} -- -ra -x
